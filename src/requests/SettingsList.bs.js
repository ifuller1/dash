// Generated by BUCKLESCRIPT VERSION 2.2.2, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Json_decode = require("bs-json/src/Json_decode.js");
var Json_encode = require("bs-json/src/Json_encode.js");
var BrowserPersist = require("reason-browser-persist/src/BrowserPersist.bs.js");

function stationDecoder(stationJson) {
  return /* record */[
          /* name */Json_decode.field("name", Json_decode.string, stationJson),
          /* crsCode */Json_decode.field("crsCode", Json_decode.string, stationJson)
        ];
}

function settingsDecoder(settingsJson) {
  return /* record */[
          /* startStationOption */Json_decode.optional((function (param) {
                  return Json_decode.field("startStationOption", stationDecoder, param);
                }), settingsJson),
          /* endStationOption */Json_decode.optional((function (param) {
                  return Json_decode.field("endStationOption", stationDecoder, param);
                }), settingsJson)
        ];
}

function encodeStation(stationOption) {
  if (stationOption) {
    var station = stationOption[0];
    return Json_encode.object_(/* :: */[
                /* tuple */[
                  "name",
                  station[/* name */0]
                ],
                /* :: */[
                  /* tuple */[
                    "crsCode",
                    station[/* crsCode */1]
                  ],
                  /* [] */0
                ]
              ]);
  } else {
    return null;
  }
}

function settingsEncoder(settings) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "startStationOption",
                encodeStation(settings[/* startStationOption */0])
              ],
              /* :: */[
                /* tuple */[
                  "endStationOption",
                  encodeStation(settings[/* endStationOption */1])
                ],
                /* [] */0
              ]
            ]);
}

function fetchSettings(callback) {
  return BrowserPersist.getItem(settingsDecoder, "settings").then((function (decodedSettings) {
                if (decodedSettings.tag) {
                  console.log("storage error " + (String(decodedSettings[0]) + ""));
                  Curry._1(callback, /* None */0);
                  return Promise.resolve(/* () */0);
                } else {
                  var result = decodedSettings[0];
                  console.log("storage results - " + (String(result) + ""));
                  Curry._1(callback, /* Some */[result]);
                  return Promise.resolve(/* () */0);
                }
              }));
}

function saveSettings(settings) {
  return BrowserPersist.setItem(settingsEncoder, "settings", settings);
}

function saveFromStation(toStation) {
  fetchSettings((function (currentSavedSettings) {
          if (currentSavedSettings) {
            BrowserPersist.setItem(settingsEncoder, "settings", /* record */[
                  /* startStationOption : Some */[toStation],
                  /* endStationOption */currentSavedSettings[0][/* endStationOption */1]
                ]);
            return /* () */0;
          } else {
            BrowserPersist.setItem(settingsEncoder, "settings", /* record */[
                  /* startStationOption : Some */[toStation],
                  /* endStationOption : None */0
                ]);
            return /* () */0;
          }
        }));
  return /* () */0;
}

function saveToStation(toStation) {
  fetchSettings((function (currentSavedSettings) {
          if (currentSavedSettings) {
            BrowserPersist.setItem(settingsEncoder, "settings", /* record */[
                  /* startStationOption */currentSavedSettings[0][/* startStationOption */0],
                  /* endStationOption : Some */[toStation]
                ]);
            return /* () */0;
          } else {
            BrowserPersist.setItem(settingsEncoder, "settings", /* record */[
                  /* startStationOption : None */0,
                  /* endStationOption : Some */[toStation]
                ]);
            return /* () */0;
          }
        }));
  return /* () */0;
}

var emptySettings = /* record */[
  /* startStationOption : None */0,
  /* endStationOption : None */0
];

exports.stationDecoder = stationDecoder;
exports.settingsDecoder = settingsDecoder;
exports.encodeStation = encodeStation;
exports.settingsEncoder = settingsEncoder;
exports.emptySettings = emptySettings;
exports.fetchSettings = fetchSettings;
exports.saveSettings = saveSettings;
exports.saveFromStation = saveFromStation;
exports.saveToStation = saveToStation;
/* Json_encode Not a pure module */
